# Generated by Django 5.0.7 on 2024-07-29 05:51

import django.db.models.deletion
import django.utils.timezone
import users.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="ResidencePlace",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True,
                        db_comment="Name of the user's country of residence. Not required.",
                        help_text="Name of the user's country of residence. Not required.",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "code_country",
                    models.CharField(
                        blank=True,
                        db_comment="Country and territory codes (ISO 3166-1).",
                        max_length=2,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["country"],
                "indexes": [
                    models.Index(
                        fields=["country", "code_country"],
                        name="users_resid_country_fc5eb7_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "password",
                    models.CharField(max_length=128, verbose_name="password"),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date joined",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        unique=True,
                        verbose_name="username",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254,
                        unique=True,
                        verbose_name="email address",
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        db_comment="Photo of the user.",
                        help_text="Photo of the user.",
                        null=True,
                        upload_to=users.models.create_custom_path_for_photo,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "residence_place",
                    models.ForeignKey(
                        blank=True,
                        db_comment="Residence place of the user.",
                        help_text="Residence place of the user.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="users.residenceplace",
                    ),
                ),
            ],
            options={
                "ordering": ["email", "username"],
                "indexes": [
                    models.Index(
                        fields=["username", "first_name", "last_name"],
                        name="users_user_usernam_1d8d1d_idx",
                    )
                ],
            },
            managers=[
                ("objects", users.models.UserManager()),
            ],
        ),
    ]
